{"ast":null,"code":"import React,{useEffect,useState,useContext}from'react';import api from'../services/api';import AuthContext from'../context/AuthContext';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Notifications(){const[notifications,setNotifications]=useState([]);const{user}=useContext(AuthContext);const navigate=useNavigate();useEffect(()=>{fetchNotifications();},[]);const fetchNotifications=async()=>{try{const res=await api.get('/notifications');// Backend should return user-based notifications\nsetNotifications(res.data);}catch(_unused){alert('Failed to load notifications');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Notifications\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/dashboard'),children:\"Back to Dashboard\"}),notifications.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No notifications yet.\"}):/*#__PURE__*/_jsx(\"ul\",{children:notifications.map((n,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:n.message}),\" \\u2014 \",/*#__PURE__*/_jsx(\"small\",{children:new Date(n.createdAt).toLocaleString()})]},index))})]});}","map":{"version":3,"names":["React","useEffect","useState","useContext","api","AuthContext","useNavigate","jsx","_jsx","jsxs","_jsxs","Notifications","notifications","setNotifications","user","navigate","fetchNotifications","res","get","data","_unused","alert","className","children","onClick","length","map","n","index","message","Date","createdAt","toLocaleString"],"sources":["/data/data/com.termux/files/home/Movie_Recommendation_App/movie-frontend/src/pages/Notifications.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport api from '../services/api';\nimport AuthContext from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Notifications() {\n  const [notifications, setNotifications] = useState([]);\n  const { user } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      const res = await api.get('/notifications'); // Backend should return user-based notifications\n      setNotifications(res.data);\n    } catch {\n      alert('Failed to load notifications');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Notifications</h2>\n      <button onClick={() => navigate('/dashboard')}>Back to Dashboard</button>\n      {notifications.length === 0 ? (\n        <p>No notifications yet.</p>\n      ) : (\n        <ul>\n          {notifications.map((n, index) => (\n            <li key={index}>\n              <strong>{n.message}</strong> â€” <small>{new Date(n.createdAt).toLocaleString()}</small>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC9D,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAChD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,cAAe,SAAS,CAAAC,aAAaA,CAAA,CAAG,CACtC,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAEY,IAAK,CAAC,CAAGX,UAAU,CAACE,WAAW,CAAC,CACxC,KAAM,CAAAU,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9BL,SAAS,CAAC,IAAM,CACde,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,gBAAgB,CAAC,CAAE;AAC7CL,gBAAgB,CAACI,GAAG,CAACE,IAAI,CAAC,CAC5B,CAAE,MAAAC,OAAA,CAAM,CACNC,KAAK,CAAC,8BAA8B,CAAC,CACvC,CACF,CAAC,CAED,mBACEX,KAAA,QAAKY,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBf,IAAA,OAAAe,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBf,IAAA,WAAQgB,OAAO,CAAEA,CAAA,GAAMT,QAAQ,CAAC,YAAY,CAAE,CAAAQ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,CACxEX,aAAa,CAACa,MAAM,GAAK,CAAC,cACzBjB,IAAA,MAAAe,QAAA,CAAG,uBAAqB,CAAG,CAAC,cAE5Bf,IAAA,OAAAe,QAAA,CACGX,aAAa,CAACc,GAAG,CAAC,CAACC,CAAC,CAAEC,KAAK,gBAC1BlB,KAAA,OAAAa,QAAA,eACEf,IAAA,WAAAe,QAAA,CAASI,CAAC,CAACE,OAAO,CAAS,CAAC,WAAG,cAAArB,IAAA,UAAAe,QAAA,CAAQ,GAAI,CAAAO,IAAI,CAACH,CAAC,CAACI,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,CAAQ,CAAC,GAD/EJ,KAEL,CACL,CAAC,CACA,CACL,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}