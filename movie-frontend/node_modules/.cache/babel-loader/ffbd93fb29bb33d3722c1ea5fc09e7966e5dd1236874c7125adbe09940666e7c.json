{"ast":null,"code":"import _objectSpread from\"/data/data/com.termux/files/home/Movie_Recommendation_App/movie-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useContext}from'react';import AuthContext from'../context/AuthContext';import api from'../services/api';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddMovie(){const{token}=useContext(AuthContext);const[movieForm,setMovieForm]=useState({title:'',genre:''});const[message,setMessage]=useState('');const navigate=useNavigate();const handleChange=e=>{setMovieForm(_objectSpread(_objectSpread({},movieForm),{},{[e.target.name]:e.target.value}));};const handleSubmit=async e=>{e.preventDefault();if(!token){setMessage('You must be logged in to add a movie.');return;}try{const res=await api.post('/movies/add',movieForm);setMessage(res.data.message||'Movie added successfully');setMovieForm({title:'',genre:''});// Optionally redirect after add\n// navigate('/movies');\n}catch(_unused){setMessage('Failed to add movie');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Movie\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{name:\"title\",placeholder:\"Title\",value:movieForm.title,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{name:\"genre\",placeholder:\"Genre\",value:movieForm.genre,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Movie\"})]}),/*#__PURE__*/_jsx(\"p\",{children:message})]});}","map":{"version":3,"names":["React","useState","useContext","AuthContext","api","useNavigate","jsx","_jsx","jsxs","_jsxs","AddMovie","token","movieForm","setMovieForm","title","genre","message","setMessage","navigate","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","res","post","data","_unused","className","children","onSubmit","placeholder","onChange","required","type"],"sources":["/data/data/com.termux/files/home/Movie_Recommendation_App/movie-frontend/src/pages/AddMovie.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport api from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function AddMovie() {\n  const { token } = useContext(AuthContext);\n  const [movieForm, setMovieForm] = useState({ title: '', genre: '' });\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setMovieForm({ ...movieForm, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!token) {\n      setMessage('You must be logged in to add a movie.');\n      return;\n    }\n\n    try {\n      const res = await api.post('/movies/add', movieForm);\n      setMessage(res.data.message || 'Movie added successfully');\n      setMovieForm({ title: '', genre: '' });\n      // Optionally redirect after add\n      // navigate('/movies');\n    } catch {\n      setMessage('Failed to add movie');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Add Movie</h2>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <input\n          name=\"title\"\n          placeholder=\"Title\"\n          value={movieForm.title}\n          onChange={handleChange}\n          required\n        />\n        <input\n          name=\"genre\"\n          placeholder=\"Genre\"\n          value={movieForm.genre}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Add Movie</button>\n      </form>\n      <p>{message}</p>\n    </div>\n  );\n}\n"],"mappings":"6JAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAChD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,cAAe,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACjC,KAAM,CAAEC,KAAM,CAAC,CAAGT,UAAU,CAACC,WAAW,CAAC,CACzC,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,CAAEa,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACpE,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAAAiB,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAc,YAAY,CAAIC,CAAC,EAAK,CAC1BP,YAAY,CAAAQ,aAAA,CAAAA,aAAA,IAAMT,SAAS,MAAE,CAACQ,CAAC,CAACE,MAAM,CAACC,IAAI,EAAGH,CAAC,CAACE,MAAM,CAACE,KAAK,EAAE,CAAC,CACjE,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAL,CAAC,EAAK,CAChCA,CAAC,CAACM,cAAc,CAAC,CAAC,CAClB,GAAI,CAACf,KAAK,CAAE,CACVM,UAAU,CAAC,uCAAuC,CAAC,CACnD,OACF,CAEA,GAAI,CACF,KAAM,CAAAU,GAAG,CAAG,KAAM,CAAAvB,GAAG,CAACwB,IAAI,CAAC,aAAa,CAAEhB,SAAS,CAAC,CACpDK,UAAU,CAACU,GAAG,CAACE,IAAI,CAACb,OAAO,EAAI,0BAA0B,CAAC,CAC1DH,YAAY,CAAC,CAAEC,KAAK,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACtC;AACA;AACF,CAAE,MAAAe,OAAA,CAAM,CACNb,UAAU,CAAC,qBAAqB,CAAC,CACnC,CACF,CAAC,CAED,mBACER,KAAA,QAAKsB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzB,IAAA,OAAAyB,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBvB,KAAA,SAAMwB,QAAQ,CAAER,YAAa,CAACM,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC5CzB,IAAA,UACEgB,IAAI,CAAC,OAAO,CACZW,WAAW,CAAC,OAAO,CACnBV,KAAK,CAAEZ,SAAS,CAACE,KAAM,CACvBqB,QAAQ,CAAEhB,YAAa,CACvBiB,QAAQ,MACT,CAAC,cACF7B,IAAA,UACEgB,IAAI,CAAC,OAAO,CACZW,WAAW,CAAC,OAAO,CACnBV,KAAK,CAAEZ,SAAS,CAACG,KAAM,CACvBoB,QAAQ,CAAEhB,YAAa,CACvBiB,QAAQ,MACT,CAAC,cACF7B,IAAA,WAAQ8B,IAAI,CAAC,QAAQ,CAAAL,QAAA,CAAC,WAAS,CAAQ,CAAC,EACpC,CAAC,cACPzB,IAAA,MAAAyB,QAAA,CAAIhB,OAAO,CAAI,CAAC,EACb,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}